{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","inputData","setInputData","keyData","setKeyData","outputData","setOutputData","className","value","onChange","e","target","id","disabled","onClick","blur","ele","document","createElement","body","appendChild","select","execCommand","removeChild","aria-hidden","encryptedData","CryptoJS","AES","encrypt","toString","decryptedData","decrypt","enc","Utf8","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"ydAoEeA,MA9Df,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNC,EADM,KACKC,EADL,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,OAGuBJ,mBAAS,IAHhC,mBAGNK,EAHM,KAGMC,EAHN,KAoCb,OACE,qBAAKC,UAAU,0BAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,qBAAKA,UAAU,QAAf,uBACA,sBAAKA,UAAU,yBAAf,UACE,qBAAKA,UAAU,cAAf,mBACA,uBAAOA,UAAU,cAAcC,MAAOP,EAAWQ,SArChC,SAACC,GACxBR,EAAaQ,EAAEC,OAAOH,aAsClB,sBAAKD,UAAU,yBAAf,UACE,qBAAKA,UAAU,cAAf,iBACA,uBAAOA,UAAU,cAAcC,MAAOL,EAASM,SArChC,SAACC,GACtBN,EAAWM,EAAEC,OAAOH,aAsChB,sBAAKD,UAAU,yBAAf,UACE,qBAAKA,UAAU,cAAf,oBACA,uBAAOK,GAAG,SAASL,UAAU,cAAcC,MAAOH,EAAYQ,UAAQ,IACtE,wBAAQN,UAAU,YAAYO,QA1BzB,SAACJ,GACZA,EAAEC,OAAOI,OAET,IAAMC,EAAMC,SAASC,cAAc,YACnCF,EAAIR,MAAQH,EACZY,SAASE,KAAKC,YAAYJ,GAC1BA,EAAIK,SACJJ,SAASK,YAAY,QACrBL,SAASE,KAAKI,YAAYP,IAkBpB,SAA6C,mBAAGT,UAAU,kBAAkBiB,cAAY,cAE1F,sBAAKjB,UAAU,4BAAf,UACE,wBAAQA,UAAU,cAAcO,QAzCxB,SAACJ,GACfA,EAAEC,OAAOI,OACT,IAAMU,EAAgBC,IAASC,IAAIC,QAAQ3B,EAAWE,GAAS0B,WAC/DvB,EAAcmB,IAsCR,qBACA,wBAAQlB,UAAU,cAAcO,QApCxB,SAACJ,GACfA,EAAEC,OAAOI,OACT,IAAMe,EAAgBJ,IAASC,IAAII,QAAQ9B,EAAWE,GAAS0B,SAASH,IAASM,IAAIC,MACrF3B,EAAcwB,IAiCR,8BCjDKI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5B,SAAS6B,eAAe,SAM1BZ,M","file":"static/js/main.dba6a6db.chunk.js","sourcesContent":["import { useState } from 'react';\nimport CryptoJS from 'crypto-js';\n\nimport './assets/fonts/font-awesome-4.7.0/css/font-awesome.min.css';\nimport './App.scss';\n\nfunction App() {\n  const [inputData, setInputData] = useState('');\n  const [keyData, setKeyData] = useState('');\n  const [outputData, setOutputData] = useState('');\n\n  const inputDataChanged = (e) => {\n    setInputData(e.target.value);\n  };\n\n  const keyDataChanged = (e) => {\n    setKeyData(e.target.value);\n  };\n\n  const encrypt = (e) => {\n    e.target.blur();\n    const encryptedData = CryptoJS.AES.encrypt(inputData, keyData).toString();\n    setOutputData(encryptedData);\n  };\n\n  const decrypt = (e) => {\n    e.target.blur();\n    const decryptedData = CryptoJS.AES.decrypt(inputData, keyData).toString(CryptoJS.enc.Utf8);\n    setOutputData(decryptedData);\n  };\n\n  const copy = (e) => {\n    e.target.blur();\n\n    const ele = document.createElement('textarea');\n    ele.value = outputData;\n    document.body.appendChild(ele);\n    ele.select();\n    document.execCommand('copy');\n    document.body.removeChild(ele);\n  };\n\n  return (\n    <div className=\"container center-center\">\n      <div className=\"content flex-column\">\n        <div className=\"title\">EasyCrypt</div>\n        <div className=\"input-item flex-center\">\n          <div className=\"input-title\">Input</div>\n          <input className=\"input-value\" value={inputData} onChange={inputDataChanged}></input>\n        </div>\n        <div className=\"input-item flex-center\">\n          <div className=\"input-title\">Key</div>\n          <input className=\"input-value\" value={keyData} onChange={keyDataChanged}></input>\n        </div>\n        <div className=\"input-item flex-center\">\n          <div className=\"input-title\">Output</div>\n          <input id=\"result\" className=\"input-value\" value={outputData} disabled></input>\n          <button className=\"copy-icon\" onClick={copy}><i className=\"fa fa-clipboard\" aria-hidden=\"true\"></i></button>\n        </div>\n        <div className=\"btn-container flex-center\">\n          <button className=\"btn encrypt\" onClick={encrypt}>Encrypt</button>\n          <button className=\"btn decrypt\" onClick={decrypt}>Decrypt</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}